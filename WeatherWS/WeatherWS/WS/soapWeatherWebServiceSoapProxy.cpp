/* soapWeatherWebServiceSoapProxy.cpp
   Generated by gSOAP 2.8.82 for weather.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapWeatherWebServiceSoapProxy.h"

WeatherWebServiceSoapProxy::WeatherWebServiceSoapProxy() : soap(SOAP_IO_DEFAULT)
{	WeatherWebServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

WeatherWebServiceSoapProxy::WeatherWebServiceSoapProxy(const WeatherWebServiceSoapProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
}

WeatherWebServiceSoapProxy::WeatherWebServiceSoapProxy(const struct soap &_soap) : soap(_soap)
{ }

WeatherWebServiceSoapProxy::WeatherWebServiceSoapProxy(const struct soap &_soap, const char *soap_endpoint_url) : soap(_soap)
{
	soap_endpoint = soap_endpoint_url;
}

WeatherWebServiceSoapProxy::WeatherWebServiceSoapProxy(const char *soap_endpoint_url) : soap(SOAP_IO_DEFAULT)
{	WeatherWebServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = soap_endpoint_url;
}

WeatherWebServiceSoapProxy::WeatherWebServiceSoapProxy(soap_mode iomode) : soap(iomode)
{	WeatherWebServiceSoapProxy_init(iomode, iomode);
}

WeatherWebServiceSoapProxy::WeatherWebServiceSoapProxy(const char *soap_endpoint_url, soap_mode iomode) : soap(iomode)
{	WeatherWebServiceSoapProxy_init(iomode, iomode);
	soap_endpoint = soap_endpoint_url;
}

WeatherWebServiceSoapProxy::WeatherWebServiceSoapProxy(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	WeatherWebServiceSoapProxy_init(imode, omode);
}

WeatherWebServiceSoapProxy::~WeatherWebServiceSoapProxy()
{
	this->destroy();
}

void WeatherWebServiceSoapProxy::WeatherWebServiceSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL },
        { "SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "WS1", "http://WebXml.com.cn/", NULL, NULL },
        { NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

WeatherWebServiceSoapProxy *WeatherWebServiceSoapProxy::copy()
{	WeatherWebServiceSoapProxy *dup = SOAP_NEW_UNMANAGED(WeatherWebServiceSoapProxy(*(struct soap*)this));
	return dup;
}

WeatherWebServiceSoapProxy& WeatherWebServiceSoapProxy::operator=(const WeatherWebServiceSoapProxy& rhs)
{	soap_done(this);
	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void WeatherWebServiceSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void WeatherWebServiceSoapProxy::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	WeatherWebServiceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void WeatherWebServiceSoapProxy::soap_noheader()
{	this->header = NULL;
}

::SOAP_ENV__Header *WeatherWebServiceSoapProxy::soap_header()
{	return this->header;
}

::SOAP_ENV__Fault *WeatherWebServiceSoapProxy::soap_fault()
{	return this->fault;
}

const char *WeatherWebServiceSoapProxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this);
}

const char *WeatherWebServiceSoapProxy::soap_fault_string()
{	return ::soap_fault_string(this);
}

const char *WeatherWebServiceSoapProxy::soap_fault_detail()
{	return ::soap_fault_detail(this);
}

int WeatherWebServiceSoapProxy::soap_close_socket()
{	return ::soap_closesock(this);
}

int WeatherWebServiceSoapProxy::soap_force_close_socket()
{	return ::soap_force_closesock(this);
}

void WeatherWebServiceSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void WeatherWebServiceSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *WeatherWebServiceSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int WeatherWebServiceSoapProxy::send_getSupportCity(const char *soap_endpoint_url, const char *soap_action, _WS1__getSupportCity *WS1__getSupportCity)
{
	struct soap *soap = this;
	struct __WS1__getSupportCity soap_tmp___WS1__getSupportCity;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/WeatherWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getSupportCity";
	soap_tmp___WS1__getSupportCity.WS1__getSupportCity = WS1__getSupportCity;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getSupportCity(soap, &soap_tmp___WS1__getSupportCity);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getSupportCity(soap, &soap_tmp___WS1__getSupportCity, "-WS1:getSupportCity", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getSupportCity(soap, &soap_tmp___WS1__getSupportCity, "-WS1:getSupportCity", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getSupportCity(_WS1__getSupportCityResponse &WS1__getSupportCityResponse)
{
	struct soap *soap = this;
	WS1__getSupportCityResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getSupportCityResponse.soap_get(soap, "WS1:getSupportCityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getSupportProvince(const char *soap_endpoint_url, const char *soap_action, _WS1__getSupportProvince *WS1__getSupportProvince)
{
	struct soap *soap = this;
	struct __WS1__getSupportProvince soap_tmp___WS1__getSupportProvince;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/WeatherWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getSupportProvince";
	soap_tmp___WS1__getSupportProvince.WS1__getSupportProvince = WS1__getSupportProvince;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getSupportProvince(soap, &soap_tmp___WS1__getSupportProvince);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getSupportProvince(soap, &soap_tmp___WS1__getSupportProvince, "-WS1:getSupportProvince", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getSupportProvince(soap, &soap_tmp___WS1__getSupportProvince, "-WS1:getSupportProvince", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getSupportProvince(_WS1__getSupportProvinceResponse &WS1__getSupportProvinceResponse)
{
	struct soap *soap = this;
	WS1__getSupportProvinceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getSupportProvinceResponse.soap_get(soap, "WS1:getSupportProvinceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getSupportDataSet(const char *soap_endpoint_url, const char *soap_action, _WS1__getSupportDataSet *WS1__getSupportDataSet)
{
	struct soap *soap = this;
	struct __WS1__getSupportDataSet soap_tmp___WS1__getSupportDataSet;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/WeatherWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getSupportDataSet";
	soap_tmp___WS1__getSupportDataSet.WS1__getSupportDataSet = WS1__getSupportDataSet;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getSupportDataSet(soap, &soap_tmp___WS1__getSupportDataSet);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getSupportDataSet(soap, &soap_tmp___WS1__getSupportDataSet, "-WS1:getSupportDataSet", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getSupportDataSet(soap, &soap_tmp___WS1__getSupportDataSet, "-WS1:getSupportDataSet", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getSupportDataSet(_WS1__getSupportDataSetResponse &WS1__getSupportDataSetResponse)
{
	struct soap *soap = this;
	WS1__getSupportDataSetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getSupportDataSetResponse.soap_get(soap, "WS1:getSupportDataSetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getWeatherbyCityName(const char *soap_endpoint_url, const char *soap_action, _WS1__getWeatherbyCityName *WS1__getWeatherbyCityName)
{
	struct soap *soap = this;
	struct __WS1__getWeatherbyCityName soap_tmp___WS1__getWeatherbyCityName;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/WeatherWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getWeatherbyCityName";
	soap_tmp___WS1__getWeatherbyCityName.WS1__getWeatherbyCityName = WS1__getWeatherbyCityName;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getWeatherbyCityName(soap, &soap_tmp___WS1__getWeatherbyCityName);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getWeatherbyCityName(soap, &soap_tmp___WS1__getWeatherbyCityName, "-WS1:getWeatherbyCityName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getWeatherbyCityName(soap, &soap_tmp___WS1__getWeatherbyCityName, "-WS1:getWeatherbyCityName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getWeatherbyCityName(_WS1__getWeatherbyCityNameResponse &WS1__getWeatherbyCityNameResponse)
{
	struct soap *soap = this;
	WS1__getWeatherbyCityNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getWeatherbyCityNameResponse.soap_get(soap, "WS1:getWeatherbyCityNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getWeatherbyCityNamePro(const char *soap_endpoint_url, const char *soap_action, _WS1__getWeatherbyCityNamePro *WS1__getWeatherbyCityNamePro)
{
	struct soap *soap = this;
	struct __WS1__getWeatherbyCityNamePro soap_tmp___WS1__getWeatherbyCityNamePro;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/WeatherWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getWeatherbyCityNamePro";
	soap_tmp___WS1__getWeatherbyCityNamePro.WS1__getWeatherbyCityNamePro = WS1__getWeatherbyCityNamePro;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getWeatherbyCityNamePro(soap, &soap_tmp___WS1__getWeatherbyCityNamePro);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getWeatherbyCityNamePro(soap, &soap_tmp___WS1__getWeatherbyCityNamePro, "-WS1:getWeatherbyCityNamePro", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getWeatherbyCityNamePro(soap, &soap_tmp___WS1__getWeatherbyCityNamePro, "-WS1:getWeatherbyCityNamePro", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getWeatherbyCityNamePro(_WS1__getWeatherbyCityNameProResponse &WS1__getWeatherbyCityNameProResponse)
{
	struct soap *soap = this;
	WS1__getWeatherbyCityNameProResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getWeatherbyCityNameProResponse.soap_get(soap, "WS1:getWeatherbyCityNameProResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getSupportCity_(const char *soap_endpoint_url, const char *soap_action, _WS1__getSupportCity *WS1__getSupportCity)
{
	struct soap *soap = this;
	struct __WS1__getSupportCity_ soap_tmp___WS1__getSupportCity_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/WeatherWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getSupportCity";
	soap_tmp___WS1__getSupportCity_.WS1__getSupportCity = WS1__getSupportCity;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getSupportCity_(soap, &soap_tmp___WS1__getSupportCity_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getSupportCity_(soap, &soap_tmp___WS1__getSupportCity_, "-WS1:getSupportCity", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getSupportCity_(soap, &soap_tmp___WS1__getSupportCity_, "-WS1:getSupportCity", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getSupportCity_(_WS1__getSupportCityResponse &WS1__getSupportCityResponse)
{
	struct soap *soap = this;
	WS1__getSupportCityResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getSupportCityResponse.soap_get(soap, "WS1:getSupportCityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getSupportProvince_(const char *soap_endpoint_url, const char *soap_action, _WS1__getSupportProvince *WS1__getSupportProvince)
{
	struct soap *soap = this;
	struct __WS1__getSupportProvince_ soap_tmp___WS1__getSupportProvince_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/WeatherWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getSupportProvince";
	soap_tmp___WS1__getSupportProvince_.WS1__getSupportProvince = WS1__getSupportProvince;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getSupportProvince_(soap, &soap_tmp___WS1__getSupportProvince_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getSupportProvince_(soap, &soap_tmp___WS1__getSupportProvince_, "-WS1:getSupportProvince", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getSupportProvince_(soap, &soap_tmp___WS1__getSupportProvince_, "-WS1:getSupportProvince", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getSupportProvince_(_WS1__getSupportProvinceResponse &WS1__getSupportProvinceResponse)
{
	struct soap *soap = this;
	WS1__getSupportProvinceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getSupportProvinceResponse.soap_get(soap, "WS1:getSupportProvinceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getSupportDataSet_(const char *soap_endpoint_url, const char *soap_action, _WS1__getSupportDataSet *WS1__getSupportDataSet)
{
	struct soap *soap = this;
	struct __WS1__getSupportDataSet_ soap_tmp___WS1__getSupportDataSet_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/WeatherWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getSupportDataSet";
	soap_tmp___WS1__getSupportDataSet_.WS1__getSupportDataSet = WS1__getSupportDataSet;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getSupportDataSet_(soap, &soap_tmp___WS1__getSupportDataSet_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getSupportDataSet_(soap, &soap_tmp___WS1__getSupportDataSet_, "-WS1:getSupportDataSet", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getSupportDataSet_(soap, &soap_tmp___WS1__getSupportDataSet_, "-WS1:getSupportDataSet", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getSupportDataSet_(_WS1__getSupportDataSetResponse &WS1__getSupportDataSetResponse)
{
	struct soap *soap = this;
	WS1__getSupportDataSetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getSupportDataSetResponse.soap_get(soap, "WS1:getSupportDataSetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getWeatherbyCityName_(const char *soap_endpoint_url, const char *soap_action, _WS1__getWeatherbyCityName *WS1__getWeatherbyCityName)
{
	struct soap *soap = this;
	struct __WS1__getWeatherbyCityName_ soap_tmp___WS1__getWeatherbyCityName_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/WeatherWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getWeatherbyCityName";
	soap_tmp___WS1__getWeatherbyCityName_.WS1__getWeatherbyCityName = WS1__getWeatherbyCityName;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getWeatherbyCityName_(soap, &soap_tmp___WS1__getWeatherbyCityName_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getWeatherbyCityName_(soap, &soap_tmp___WS1__getWeatherbyCityName_, "-WS1:getWeatherbyCityName", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getWeatherbyCityName_(soap, &soap_tmp___WS1__getWeatherbyCityName_, "-WS1:getWeatherbyCityName", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getWeatherbyCityName_(_WS1__getWeatherbyCityNameResponse &WS1__getWeatherbyCityNameResponse)
{
	struct soap *soap = this;
	WS1__getWeatherbyCityNameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getWeatherbyCityNameResponse.soap_get(soap, "WS1:getWeatherbyCityNameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getWeatherbyCityNamePro_(const char *soap_endpoint_url, const char *soap_action, _WS1__getWeatherbyCityNamePro *WS1__getWeatherbyCityNamePro)
{
	struct soap *soap = this;
	struct __WS1__getWeatherbyCityNamePro_ soap_tmp___WS1__getWeatherbyCityNamePro_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/WeatherWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getWeatherbyCityNamePro";
	soap_tmp___WS1__getWeatherbyCityNamePro_.WS1__getWeatherbyCityNamePro = WS1__getWeatherbyCityNamePro;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getWeatherbyCityNamePro_(soap, &soap_tmp___WS1__getWeatherbyCityNamePro_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getWeatherbyCityNamePro_(soap, &soap_tmp___WS1__getWeatherbyCityNamePro_, "-WS1:getWeatherbyCityNamePro", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getWeatherbyCityNamePro_(soap, &soap_tmp___WS1__getWeatherbyCityNamePro_, "-WS1:getWeatherbyCityNamePro", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getWeatherbyCityNamePro_(_WS1__getWeatherbyCityNameProResponse &WS1__getWeatherbyCityNameProResponse)
{
	struct soap *soap = this;
	WS1__getWeatherbyCityNameProResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getWeatherbyCityNameProResponse.soap_get(soap, "WS1:getWeatherbyCityNameProResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getCountryCityByIp(const char *soap_endpoint_url, const char *soap_action, _WS1__getCountryCityByIp *WS1__getCountryCityByIp)
{
	struct soap *soap = this;
	struct __WS1__getCountryCityByIp soap_tmp___WS1__getCountryCityByIp;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getCountryCityByIp";
	soap_tmp___WS1__getCountryCityByIp.WS1__getCountryCityByIp = WS1__getCountryCityByIp;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getCountryCityByIp(soap, &soap_tmp___WS1__getCountryCityByIp);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getCountryCityByIp(soap, &soap_tmp___WS1__getCountryCityByIp, "-WS1:getCountryCityByIp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getCountryCityByIp(soap, &soap_tmp___WS1__getCountryCityByIp, "-WS1:getCountryCityByIp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getCountryCityByIp(_WS1__getCountryCityByIpResponse &WS1__getCountryCityByIpResponse)
{
	struct soap *soap = this;
	WS1__getCountryCityByIpResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getCountryCityByIpResponse.soap_get(soap, "WS1:getCountryCityByIpResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getGeoIPContext(const char *soap_endpoint_url, const char *soap_action, _WS1__getGeoIPContext *WS1__getGeoIPContext)
{
	struct soap *soap = this;
	struct __WS1__getGeoIPContext soap_tmp___WS1__getGeoIPContext;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getGeoIPContext";
	soap_tmp___WS1__getGeoIPContext.WS1__getGeoIPContext = WS1__getGeoIPContext;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getGeoIPContext(soap, &soap_tmp___WS1__getGeoIPContext);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getGeoIPContext(soap, &soap_tmp___WS1__getGeoIPContext, "-WS1:getGeoIPContext", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getGeoIPContext(soap, &soap_tmp___WS1__getGeoIPContext, "-WS1:getGeoIPContext", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getGeoIPContext(_WS1__getGeoIPContextResponse &WS1__getGeoIPContextResponse)
{
	struct soap *soap = this;
	WS1__getGeoIPContextResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getGeoIPContextResponse.soap_get(soap, "WS1:getGeoIPContextResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getVersionTime(const char *soap_endpoint_url, const char *soap_action, _WS1__getVersionTime *WS1__getVersionTime)
{
	struct soap *soap = this;
	struct __WS1__getVersionTime soap_tmp___WS1__getVersionTime;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getVersionTime";
	soap_tmp___WS1__getVersionTime.WS1__getVersionTime = WS1__getVersionTime;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getVersionTime(soap, &soap_tmp___WS1__getVersionTime);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getVersionTime(soap, &soap_tmp___WS1__getVersionTime, "-WS1:getVersionTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getVersionTime(soap, &soap_tmp___WS1__getVersionTime, "-WS1:getVersionTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getVersionTime(_WS1__getVersionTimeResponse &WS1__getVersionTimeResponse)
{
	struct soap *soap = this;
	WS1__getVersionTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getVersionTimeResponse.soap_get(soap, "WS1:getVersionTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getCountryCityByIp_(const char *soap_endpoint_url, const char *soap_action, _WS1__getCountryCityByIp *WS1__getCountryCityByIp)
{
	struct soap *soap = this;
	struct __WS1__getCountryCityByIp_ soap_tmp___WS1__getCountryCityByIp_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getCountryCityByIp";
	soap_tmp___WS1__getCountryCityByIp_.WS1__getCountryCityByIp = WS1__getCountryCityByIp;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getCountryCityByIp_(soap, &soap_tmp___WS1__getCountryCityByIp_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getCountryCityByIp_(soap, &soap_tmp___WS1__getCountryCityByIp_, "-WS1:getCountryCityByIp", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getCountryCityByIp_(soap, &soap_tmp___WS1__getCountryCityByIp_, "-WS1:getCountryCityByIp", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getCountryCityByIp_(_WS1__getCountryCityByIpResponse &WS1__getCountryCityByIpResponse)
{
	struct soap *soap = this;
	WS1__getCountryCityByIpResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getCountryCityByIpResponse.soap_get(soap, "WS1:getCountryCityByIpResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getGeoIPContext_(const char *soap_endpoint_url, const char *soap_action, _WS1__getGeoIPContext *WS1__getGeoIPContext)
{
	struct soap *soap = this;
	struct __WS1__getGeoIPContext_ soap_tmp___WS1__getGeoIPContext_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getGeoIPContext";
	soap_tmp___WS1__getGeoIPContext_.WS1__getGeoIPContext = WS1__getGeoIPContext;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getGeoIPContext_(soap, &soap_tmp___WS1__getGeoIPContext_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getGeoIPContext_(soap, &soap_tmp___WS1__getGeoIPContext_, "-WS1:getGeoIPContext", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getGeoIPContext_(soap, &soap_tmp___WS1__getGeoIPContext_, "-WS1:getGeoIPContext", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getGeoIPContext_(_WS1__getGeoIPContextResponse &WS1__getGeoIPContextResponse)
{
	struct soap *soap = this;
	WS1__getGeoIPContextResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getGeoIPContextResponse.soap_get(soap, "WS1:getGeoIPContextResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int WeatherWebServiceSoapProxy::send_getVersionTime_(const char *soap_endpoint_url, const char *soap_action, _WS1__getVersionTime *WS1__getVersionTime)
{
	struct soap *soap = this;
	struct __WS1__getVersionTime_ soap_tmp___WS1__getVersionTime_;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://WebXml.com.cn/getVersionTime";
	soap_tmp___WS1__getVersionTime_.WS1__getVersionTime = WS1__getVersionTime;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___WS1__getVersionTime_(soap, &soap_tmp___WS1__getVersionTime_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___WS1__getVersionTime_(soap, &soap_tmp___WS1__getVersionTime_, "-WS1:getVersionTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___WS1__getVersionTime_(soap, &soap_tmp___WS1__getVersionTime_, "-WS1:getVersionTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int WeatherWebServiceSoapProxy::recv_getVersionTime_(_WS1__getVersionTimeResponse &WS1__getVersionTimeResponse)
{
	struct soap *soap = this;
	WS1__getVersionTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	WS1__getVersionTimeResponse.soap_get(soap, "WS1:getVersionTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
